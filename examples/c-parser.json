{"1":["context, domain, schedule, reads, writes = parse_code(\"\"\"\n#pragma scop\nfor (i = 0; i < N; i++)\n  for (j = 0; j < N; j++)\nfoo:    Z[i+j] += A[i] * B[j];\n\nfor (i = 0; i < N; i++)\n  for (j = 0; j < M; j++) {\nS:  X[i][j] = 0.0;\n    for (k = 0; k < K; ++k)\nT:    X[i][j] += C[i][k] * D[k][j];\n  }\n#pragma endscop\n\"\"\")","","python"],"2":["print_latex(context)","\\[(N, M, K) \\to \\{\\, () \\,\\}\\]\n","python"],"3":["print_latex(domain)","\\[(N, M, K) \\to \\{\\, \\mathrm{S}(i, j) \\mid N > 0 \\wedge M > 0 \\wedge 0 \\le i < N \\wedge 0 \\le j < M \\,\\} \\cup (N, M, K) \\to \\{\\, \\mathrm{foo}(i, j) \\mid N > 0 \\wedge 0 \\le i < N \\wedge 0 \\le j < N \\,\\} \\cup (N, M, K) \\to \\{\\, \\mathrm{T}(i, j, k) \\mid N > 0 \\wedge M > 0 \\wedge K > 0 \\wedge 0 \\le i < N \\wedge 0 \\le j < M \\wedge 0 \\le k < K \\,\\}\\]\n","python"],"4":["print_latex(schedule)","\\[(N, M, K) \\to \\{\\, \\mathrm{T}(i0, i1, i2) \\to (1, i0, 0, i1, 1, i2, 0) \\,\\} \\cup (N, M, K) \\to \\{\\, \\mathrm{foo}(i0, i1) \\to (0, i0, 0, i1, 0) \\,\\} \\cup (N, M, K) \\to \\{\\, \\mathrm{S}(i0, i1) \\to (1, i0, 0, i1, 0) \\,\\}\\]\n","python"],"5":["print_latex(writes)","\\[(N, M, K) \\to \\{\\, \\mathrm{T}(i, j, k) \\to \\mathrm{X}(i, j) \\,\\} \\cup (N, M, K) \\to \\{\\, \\mathrm{foo}(i, j) \\to \\mathrm{Z}(i + j) \\,\\} \\cup (N, M, K) \\to \\{\\, \\mathrm{S}(i, j) \\to \\mathrm{X}(i, j) \\,\\}\\]\n","python"],"6":["","",""]}